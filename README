# To Install:

## First: Install WebDreamt's PHP Code

Install WebDreamt via Composer and add paths to the autoload's classmap to correspond to the files
used by WebDreamt and Propel. If you don't know about Composer, it is actually pretty easy to use,
but I won't explain it here; just look at Composer's website. You will need something similar to
the following in your composer.json:
```
"autoload": {
  "classmap": [
     "db/propel/generated-classes/",
     "db/classes/"
  ]
},
"require": {
	"timspro/webdreamt-propel": "dev-master"
}
```

## Second: Install WebDreamt's CSS and JavaScript Code

A) The simplest method is to just look at the included files in the `js`, `css`, `img`, and
`font` folders in the `vendor/timspro/webdreamt` directory and copy those to the corresponding
place in your project.

B) If you want to have a robust solution that takes into account that the CSS and JavaScript
dependencies of WebDreamt might change, use Bower to install WebDreamt's JavaScript and CSS files,
and then use Grunt to merge the files together and create minified versions of the files. You can
look at bower.json and Gruntfile.js in `vendor/timspro/webdreamt` to see how I do this for WebDreamt.
Note that I make use of a tool called `bower-installer` to get only the needed files from given
Bower repositories, which must be installed separately from bower.

# Third: Specify Database Information

Create a new class with the following code:
```
class CustomBox extends \WebDreamt\Box {
  function __construct() {
    $this->DatabaseHost = "localhost"; //Use your database host
    $this->DatabaseName = "";          //Use your database name
    $this->DatabaseUsername = "root";  //Use your database username
    $this->DatabasePassword = "";      //Use your database password
  }
}
```

Make sure that this class is in a location where your autoloader will find it (for composer, it's
likely your `src` folder) or else include it manually.

# Fourth: Configure WebDreamt

Now, create a script with the following code:
```
CustomBox::get()->script()->manager();
```

All you have to do is run this script to set up Propel and WebDreamt since it will automatically
realize that Propel and WebDreamt have not been setup; you don't need to specify command. However,
you will want to return to this script when you make changes to the database and run 'Update Database'.
You can also use the script to fill the database with random data by running 'Fill Database with Data'.

To run the script:

A) If you want to run the script via command line, you can navigate to where you created the script via
the command line and run PHP on the script. You can use the argument `--help` to see a list of
commands.

B) If you want to run the script via a web browser, you can navigate to the script via a URL and
use the web form. Given the commands (such as destroy database), you should not let this URL be
publicly visible on a production server, although there is no risk of having arbitrary code running
on the server or database information being leaked via the form.

You can easily make your own version of the manager by looking at the source code located at
`vendor/timspro/WebDreamt/script/manager.php`.

# Fifth: Use WebDreamt

To make use of WebDreamt and Propel in your code, you should include the line:
```
Box::get()->enablePropel();
```

WebDreamt provides a number of different scripts to help you work with the library, which you can
include from your own scripts. These are currently are:

A) authorization.php: A browser-based script to allow creating and editing groups and their
basic permissions to modify tables and tables' columns in the database.

B) manager.php: A browser-based or command-line script to issue commands to WebDreamt to manipulate
Propel and the database.

C) push-with-db.php: A command-line script which adds all modified files to the local git repository,
commits the modified files, pulls any changes, pushes the local changes, checks for WebDreamt updates,
updates the database schema, dumps the composer autoload, deletes the data in the database, and
fills the database with random data.

D) push.php: A command-line script which adds all modified files to the local git repository,
commits the modified files, pulls any changes, pushes the local changes, and dumps the composer
autoload.

All of these are located in `vendor/timspro/webdreamt/script`. As a security precaution, none of these
scripts can be run directly by the web server via URL. If you make use of them in your own code, you
make sure your code is secure. Also, feel free to look at the source code of the scripts and adapt them
to your needs.