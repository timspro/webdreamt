; Settings for WebDreamt

; Specifies access for database.
[Database]
db_server = localhost
db_username = root
db_password = 
db_database = test

; Specifies login information for GUI.
[Schema Editor]
; If localhost_pass_through is true AND server name is localhost, 
; then editor_password will not be checked to access the GUI.
localhost_pass_through = true
; If editor password is empty, then no access will be granted
; UNLESS server name is localhost and localhost_pass_through is
; true.
editor_password = 

; Specifies how to find access information in database.
[User]
; User information
user_table = user
user_id = id
; user_label is how users should be identified in the GUI/logs. 
; One could also use id, which is more general and is unique,
; but is less descriptive than username.
user_label = username
; Note that user_table will also be affected by auth_* fields.

[Group]
; Group information
group_table = group
group_id = id
; group_label is how groups should be identified in the GUI/logs.
group_label = name
; group_comment is notes about the particular group.
group_comment = comment

[Column]
; Column information
column_table = column
column_id = id
column_from = from
column_field = field 

[Group2User]
; Mapping from users to groups
group2user_table = group2user
g2u_id = id
g2u_user_id = user_id
g2u_group_id = group_id

[Group2Column]
; Mapping from groups to columns
group2column_table = group2column
g2c_id = id
g2c_group_id = group_id
g2c_column_id = column_id
; Type represents the CRUD operation.
g2c_type = type

; Specifies how to identify user.
[Authentication]
; Method to call to authenticate. Note that if unchanged then will 
; look for auth_password and auth_token in user_table as part of 
; the authentication process. If you want to write a custom method,
; look at \WebDreamt\Access\User::authenticate. Also, use a fully 
; qualified name i.e. \foo instead of foo
auth_class = \WebDreamt\Access\User
; If a custom authentication method is not defined and if auth_session 
; is true, then will use a PHP session for login information. If false
; then will use HTTP cookies.
auth_session = true
; If auth_protect is true, then auth_password and auth_token will not 
; be passed/modified by client code under any circumstances.
auth_protect = true
; Column in user_table that contains password (will be hashed if not 
; using custom authentication).
auth_password = password
; Columm in user_table that contains login token. 
auth_token = login_token